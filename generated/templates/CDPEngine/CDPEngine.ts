// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddAuthorization extends ethereum.Event {
  get params(): AddAuthorization__Params {
    return new AddAuthorization__Params(this);
  }
}

export class AddAuthorization__Params {
  _event: AddAuthorization;

  constructor(event: AddAuthorization) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ApproveCDPModification extends ethereum.Event {
  get params(): ApproveCDPModification__Params {
    return new ApproveCDPModification__Params(this);
  }
}

export class ApproveCDPModification__Params {
  _event: ApproveCDPModification;

  constructor(event: ApproveCDPModification) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ConfiscateCDPCollateralAndDebt extends ethereum.Event {
  get params(): ConfiscateCDPCollateralAndDebt__Params {
    return new ConfiscateCDPCollateralAndDebt__Params(this);
  }
}

export class ConfiscateCDPCollateralAndDebt__Params {
  _event: ConfiscateCDPCollateralAndDebt;

  constructor(event: ConfiscateCDPCollateralAndDebt) {
    this._event = event;
  }

  get collateralType(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get cdp(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get collateralCounterparty(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get debtCounterparty(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get deltaCollateral(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get deltaDebt(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get globalUnbackedDebt(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class CreateUnbackedDebt extends ethereum.Event {
  get params(): CreateUnbackedDebt__Params {
    return new CreateUnbackedDebt__Params(this);
  }
}

export class CreateUnbackedDebt__Params {
  _event: CreateUnbackedDebt;

  constructor(event: CreateUnbackedDebt) {
    this._event = event;
  }

  get debtDestination(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get coinDestination(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get rad(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get debtDstBalance(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get coinDstBalance(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get globalUnbackedDebt(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get globalDebt(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class DenyCDPModification extends ethereum.Event {
  get params(): DenyCDPModification__Params {
    return new DenyCDPModification__Params(this);
  }
}

export class DenyCDPModification__Params {
  _event: DenyCDPModification;

  constructor(event: DenyCDPModification) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class DisableContract extends ethereum.Event {
  get params(): DisableContract__Params {
    return new DisableContract__Params(this);
  }
}

export class DisableContract__Params {
  _event: DisableContract;

  constructor(event: DisableContract) {
    this._event = event;
  }
}

export class InitializeCollateralType extends ethereum.Event {
  get params(): InitializeCollateralType__Params {
    return new InitializeCollateralType__Params(this);
  }
}

export class InitializeCollateralType__Params {
  _event: InitializeCollateralType;

  constructor(event: InitializeCollateralType) {
    this._event = event;
  }

  get collateralType(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class ModifyCDPCollateralization extends ethereum.Event {
  get params(): ModifyCDPCollateralization__Params {
    return new ModifyCDPCollateralization__Params(this);
  }
}

export class ModifyCDPCollateralization__Params {
  _event: ModifyCDPCollateralization;

  constructor(event: ModifyCDPCollateralization) {
    this._event = event;
  }

  get collateralType(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get cdp(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get collateralSource(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get debtDestination(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get deltaCollateral(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get deltaDebt(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get lockedCollateral(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get generatedDebt(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get globalDebt(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class ModifyCollateralBalance extends ethereum.Event {
  get params(): ModifyCollateralBalance__Params {
    return new ModifyCollateralBalance__Params(this);
  }
}

export class ModifyCollateralBalance__Params {
  _event: ModifyCollateralBalance;

  constructor(event: ModifyCollateralBalance) {
    this._event = event;
  }

  get collateralType(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get wad(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ModifyParameters extends ethereum.Event {
  get params(): ModifyParameters__Params {
    return new ModifyParameters__Params(this);
  }
}

export class ModifyParameters__Params {
  _event: ModifyParameters;

  constructor(event: ModifyParameters) {
    this._event = event;
  }

  get parameter(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get data(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ModifyParameters1 extends ethereum.Event {
  get params(): ModifyParameters1__Params {
    return new ModifyParameters1__Params(this);
  }
}

export class ModifyParameters1__Params {
  _event: ModifyParameters1;

  constructor(event: ModifyParameters1) {
    this._event = event;
  }

  get collateralType(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get parameter(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get data(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RemoveAuthorization extends ethereum.Event {
  get params(): RemoveAuthorization__Params {
    return new RemoveAuthorization__Params(this);
  }
}

export class RemoveAuthorization__Params {
  _event: RemoveAuthorization;

  constructor(event: RemoveAuthorization) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SettleDebt extends ethereum.Event {
  get params(): SettleDebt__Params {
    return new SettleDebt__Params(this);
  }
}

export class SettleDebt__Params {
  _event: SettleDebt;

  constructor(event: SettleDebt) {
    this._event = event;
  }

  get rad(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get debtBalance(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get coinBalance(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get globalUnbackedDebt(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get globalDebt(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class TransferCDPCollateralAndDebt extends ethereum.Event {
  get params(): TransferCDPCollateralAndDebt__Params {
    return new TransferCDPCollateralAndDebt__Params(this);
  }
}

export class TransferCDPCollateralAndDebt__Params {
  _event: TransferCDPCollateralAndDebt;

  constructor(event: TransferCDPCollateralAndDebt) {
    this._event = event;
  }

  get collateralType(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get src(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get dst(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get deltaCollateral(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get deltaDebt(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get srcLockedCollateral(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get srcGeneratedDebt(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get dstLockedCollateral(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get dstGeneratedDebt(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class TransferCollateral extends ethereum.Event {
  get params(): TransferCollateral__Params {
    return new TransferCollateral__Params(this);
  }
}

export class TransferCollateral__Params {
  _event: TransferCollateral;

  constructor(event: TransferCollateral) {
    this._event = event;
  }

  get collateralType(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get src(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get dst(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get wad(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class TransferInternalCoins extends ethereum.Event {
  get params(): TransferInternalCoins__Params {
    return new TransferInternalCoins__Params(this);
  }
}

export class TransferInternalCoins__Params {
  _event: TransferInternalCoins;

  constructor(event: TransferInternalCoins) {
    this._event = event;
  }

  get src(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get dst(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get rad(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class UpdateAccumulatedRate extends ethereum.Event {
  get params(): UpdateAccumulatedRate__Params {
    return new UpdateAccumulatedRate__Params(this);
  }
}

export class UpdateAccumulatedRate__Params {
  _event: UpdateAccumulatedRate;

  constructor(event: UpdateAccumulatedRate) {
    this._event = event;
  }

  get collateralType(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get surplusDst(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get rateMultiplier(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get dstCoinBalance(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get globalDebt(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class CDPEngine__cdpsResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class CDPEngine__collateralTypesResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }
}

export class CDPEngine extends ethereum.SmartContract {
  static bind(address: Address): CDPEngine {
    return new CDPEngine("CDPEngine", address);
  }

  authorizedAccounts(param0: Address): BigInt {
    let result = super.call(
      "authorizedAccounts",
      "authorizedAccounts(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_authorizedAccounts(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "authorizedAccounts",
      "authorizedAccounts(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  canModifyCDP(cdp: Address, account: Address): boolean {
    let result = super.call(
      "canModifyCDP",
      "canModifyCDP(address,address):(bool)",
      [ethereum.Value.fromAddress(cdp), ethereum.Value.fromAddress(account)]
    );

    return result[0].toBoolean();
  }

  try_canModifyCDP(
    cdp: Address,
    account: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "canModifyCDP",
      "canModifyCDP(address,address):(bool)",
      [ethereum.Value.fromAddress(cdp), ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  cdpRights(param0: Address, param1: Address): BigInt {
    let result = super.call(
      "cdpRights",
      "cdpRights(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return result[0].toBigInt();
  }

  try_cdpRights(param0: Address, param1: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "cdpRights",
      "cdpRights(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  cdps(param0: Bytes, param1: Address): CDPEngine__cdpsResult {
    let result = super.call("cdps", "cdps(bytes32,address):(uint256,uint256)", [
      ethereum.Value.fromFixedBytes(param0),
      ethereum.Value.fromAddress(param1)
    ]);

    return new CDPEngine__cdpsResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_cdps(
    param0: Bytes,
    param1: Address
  ): ethereum.CallResult<CDPEngine__cdpsResult> {
    let result = super.tryCall(
      "cdps",
      "cdps(bytes32,address):(uint256,uint256)",
      [
        ethereum.Value.fromFixedBytes(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CDPEngine__cdpsResult(value[0].toBigInt(), value[1].toBigInt())
    );
  }

  coinBalance(param0: Address): BigInt {
    let result = super.call("coinBalance", "coinBalance(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_coinBalance(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "coinBalance",
      "coinBalance(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  collateralTypes(param0: Bytes): CDPEngine__collateralTypesResult {
    let result = super.call(
      "collateralTypes",
      "collateralTypes(bytes32):(uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new CDPEngine__collateralTypesResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt()
    );
  }

  try_collateralTypes(
    param0: Bytes
  ): ethereum.CallResult<CDPEngine__collateralTypesResult> {
    let result = super.tryCall(
      "collateralTypes",
      "collateralTypes(bytes32):(uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CDPEngine__collateralTypesResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt()
      )
    );
  }

  contractEnabled(): BigInt {
    let result = super.call(
      "contractEnabled",
      "contractEnabled():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_contractEnabled(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "contractEnabled",
      "contractEnabled():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  debtBalance(param0: Address): BigInt {
    let result = super.call("debtBalance", "debtBalance(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_debtBalance(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "debtBalance",
      "debtBalance(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  globalDebt(): BigInt {
    let result = super.call("globalDebt", "globalDebt():(uint256)", []);

    return result[0].toBigInt();
  }

  try_globalDebt(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("globalDebt", "globalDebt():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  globalDebtCeiling(): BigInt {
    let result = super.call(
      "globalDebtCeiling",
      "globalDebtCeiling():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_globalDebtCeiling(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "globalDebtCeiling",
      "globalDebtCeiling():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  globalUnbackedDebt(): BigInt {
    let result = super.call(
      "globalUnbackedDebt",
      "globalUnbackedDebt():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_globalUnbackedDebt(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "globalUnbackedDebt",
      "globalUnbackedDebt():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenCollateral(param0: Bytes, param1: Address): BigInt {
    let result = super.call(
      "tokenCollateral",
      "tokenCollateral(bytes32,address):(uint256)",
      [
        ethereum.Value.fromFixedBytes(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_tokenCollateral(
    param0: Bytes,
    param1: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenCollateral",
      "tokenCollateral(bytes32,address):(uint256)",
      [
        ethereum.Value.fromFixedBytes(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddAuthorizationCall extends ethereum.Call {
  get inputs(): AddAuthorizationCall__Inputs {
    return new AddAuthorizationCall__Inputs(this);
  }

  get outputs(): AddAuthorizationCall__Outputs {
    return new AddAuthorizationCall__Outputs(this);
  }
}

export class AddAuthorizationCall__Inputs {
  _call: AddAuthorizationCall;

  constructor(call: AddAuthorizationCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddAuthorizationCall__Outputs {
  _call: AddAuthorizationCall;

  constructor(call: AddAuthorizationCall) {
    this._call = call;
  }
}

export class ApproveCDPModificationCall extends ethereum.Call {
  get inputs(): ApproveCDPModificationCall__Inputs {
    return new ApproveCDPModificationCall__Inputs(this);
  }

  get outputs(): ApproveCDPModificationCall__Outputs {
    return new ApproveCDPModificationCall__Outputs(this);
  }
}

export class ApproveCDPModificationCall__Inputs {
  _call: ApproveCDPModificationCall;

  constructor(call: ApproveCDPModificationCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ApproveCDPModificationCall__Outputs {
  _call: ApproveCDPModificationCall;

  constructor(call: ApproveCDPModificationCall) {
    this._call = call;
  }
}

export class ConfiscateCDPCollateralAndDebtCall extends ethereum.Call {
  get inputs(): ConfiscateCDPCollateralAndDebtCall__Inputs {
    return new ConfiscateCDPCollateralAndDebtCall__Inputs(this);
  }

  get outputs(): ConfiscateCDPCollateralAndDebtCall__Outputs {
    return new ConfiscateCDPCollateralAndDebtCall__Outputs(this);
  }
}

export class ConfiscateCDPCollateralAndDebtCall__Inputs {
  _call: ConfiscateCDPCollateralAndDebtCall;

  constructor(call: ConfiscateCDPCollateralAndDebtCall) {
    this._call = call;
  }

  get collateralType(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get cdp(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get collateralCounterparty(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get debtCounterparty(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get deltaCollateral(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get deltaDebt(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class ConfiscateCDPCollateralAndDebtCall__Outputs {
  _call: ConfiscateCDPCollateralAndDebtCall;

  constructor(call: ConfiscateCDPCollateralAndDebtCall) {
    this._call = call;
  }
}

export class CreateUnbackedDebtCall extends ethereum.Call {
  get inputs(): CreateUnbackedDebtCall__Inputs {
    return new CreateUnbackedDebtCall__Inputs(this);
  }

  get outputs(): CreateUnbackedDebtCall__Outputs {
    return new CreateUnbackedDebtCall__Outputs(this);
  }
}

export class CreateUnbackedDebtCall__Inputs {
  _call: CreateUnbackedDebtCall;

  constructor(call: CreateUnbackedDebtCall) {
    this._call = call;
  }

  get debtDestination(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get coinDestination(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get rad(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CreateUnbackedDebtCall__Outputs {
  _call: CreateUnbackedDebtCall;

  constructor(call: CreateUnbackedDebtCall) {
    this._call = call;
  }
}

export class DenyCDPModificationCall extends ethereum.Call {
  get inputs(): DenyCDPModificationCall__Inputs {
    return new DenyCDPModificationCall__Inputs(this);
  }

  get outputs(): DenyCDPModificationCall__Outputs {
    return new DenyCDPModificationCall__Outputs(this);
  }
}

export class DenyCDPModificationCall__Inputs {
  _call: DenyCDPModificationCall;

  constructor(call: DenyCDPModificationCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class DenyCDPModificationCall__Outputs {
  _call: DenyCDPModificationCall;

  constructor(call: DenyCDPModificationCall) {
    this._call = call;
  }
}

export class DisableContractCall extends ethereum.Call {
  get inputs(): DisableContractCall__Inputs {
    return new DisableContractCall__Inputs(this);
  }

  get outputs(): DisableContractCall__Outputs {
    return new DisableContractCall__Outputs(this);
  }
}

export class DisableContractCall__Inputs {
  _call: DisableContractCall;

  constructor(call: DisableContractCall) {
    this._call = call;
  }
}

export class DisableContractCall__Outputs {
  _call: DisableContractCall;

  constructor(call: DisableContractCall) {
    this._call = call;
  }
}

export class InitializeCollateralTypeCall extends ethereum.Call {
  get inputs(): InitializeCollateralTypeCall__Inputs {
    return new InitializeCollateralTypeCall__Inputs(this);
  }

  get outputs(): InitializeCollateralTypeCall__Outputs {
    return new InitializeCollateralTypeCall__Outputs(this);
  }
}

export class InitializeCollateralTypeCall__Inputs {
  _call: InitializeCollateralTypeCall;

  constructor(call: InitializeCollateralTypeCall) {
    this._call = call;
  }

  get collateralType(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class InitializeCollateralTypeCall__Outputs {
  _call: InitializeCollateralTypeCall;

  constructor(call: InitializeCollateralTypeCall) {
    this._call = call;
  }
}

export class ModifyCDPCollateralizationCall extends ethereum.Call {
  get inputs(): ModifyCDPCollateralizationCall__Inputs {
    return new ModifyCDPCollateralizationCall__Inputs(this);
  }

  get outputs(): ModifyCDPCollateralizationCall__Outputs {
    return new ModifyCDPCollateralizationCall__Outputs(this);
  }
}

export class ModifyCDPCollateralizationCall__Inputs {
  _call: ModifyCDPCollateralizationCall;

  constructor(call: ModifyCDPCollateralizationCall) {
    this._call = call;
  }

  get collateralType(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get cdp(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get collateralSource(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get debtDestination(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get deltaCollateral(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get deltaDebt(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class ModifyCDPCollateralizationCall__Outputs {
  _call: ModifyCDPCollateralizationCall;

  constructor(call: ModifyCDPCollateralizationCall) {
    this._call = call;
  }
}

export class ModifyCollateralBalanceCall extends ethereum.Call {
  get inputs(): ModifyCollateralBalanceCall__Inputs {
    return new ModifyCollateralBalanceCall__Inputs(this);
  }

  get outputs(): ModifyCollateralBalanceCall__Outputs {
    return new ModifyCollateralBalanceCall__Outputs(this);
  }
}

export class ModifyCollateralBalanceCall__Inputs {
  _call: ModifyCollateralBalanceCall;

  constructor(call: ModifyCollateralBalanceCall) {
    this._call = call;
  }

  get collateralType(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get wad(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ModifyCollateralBalanceCall__Outputs {
  _call: ModifyCollateralBalanceCall;

  constructor(call: ModifyCollateralBalanceCall) {
    this._call = call;
  }
}

export class ModifyParametersCall extends ethereum.Call {
  get inputs(): ModifyParametersCall__Inputs {
    return new ModifyParametersCall__Inputs(this);
  }

  get outputs(): ModifyParametersCall__Outputs {
    return new ModifyParametersCall__Outputs(this);
  }
}

export class ModifyParametersCall__Inputs {
  _call: ModifyParametersCall;

  constructor(call: ModifyParametersCall) {
    this._call = call;
  }

  get collateralType(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get parameter(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get data(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ModifyParametersCall__Outputs {
  _call: ModifyParametersCall;

  constructor(call: ModifyParametersCall) {
    this._call = call;
  }
}

export class ModifyParameters1Call extends ethereum.Call {
  get inputs(): ModifyParameters1Call__Inputs {
    return new ModifyParameters1Call__Inputs(this);
  }

  get outputs(): ModifyParameters1Call__Outputs {
    return new ModifyParameters1Call__Outputs(this);
  }
}

export class ModifyParameters1Call__Inputs {
  _call: ModifyParameters1Call;

  constructor(call: ModifyParameters1Call) {
    this._call = call;
  }

  get parameter(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get data(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ModifyParameters1Call__Outputs {
  _call: ModifyParameters1Call;

  constructor(call: ModifyParameters1Call) {
    this._call = call;
  }
}

export class RemoveAuthorizationCall extends ethereum.Call {
  get inputs(): RemoveAuthorizationCall__Inputs {
    return new RemoveAuthorizationCall__Inputs(this);
  }

  get outputs(): RemoveAuthorizationCall__Outputs {
    return new RemoveAuthorizationCall__Outputs(this);
  }
}

export class RemoveAuthorizationCall__Inputs {
  _call: RemoveAuthorizationCall;

  constructor(call: RemoveAuthorizationCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveAuthorizationCall__Outputs {
  _call: RemoveAuthorizationCall;

  constructor(call: RemoveAuthorizationCall) {
    this._call = call;
  }
}

export class SettleDebtCall extends ethereum.Call {
  get inputs(): SettleDebtCall__Inputs {
    return new SettleDebtCall__Inputs(this);
  }

  get outputs(): SettleDebtCall__Outputs {
    return new SettleDebtCall__Outputs(this);
  }
}

export class SettleDebtCall__Inputs {
  _call: SettleDebtCall;

  constructor(call: SettleDebtCall) {
    this._call = call;
  }

  get rad(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SettleDebtCall__Outputs {
  _call: SettleDebtCall;

  constructor(call: SettleDebtCall) {
    this._call = call;
  }
}

export class TransferCDPCollateralAndDebtCall extends ethereum.Call {
  get inputs(): TransferCDPCollateralAndDebtCall__Inputs {
    return new TransferCDPCollateralAndDebtCall__Inputs(this);
  }

  get outputs(): TransferCDPCollateralAndDebtCall__Outputs {
    return new TransferCDPCollateralAndDebtCall__Outputs(this);
  }
}

export class TransferCDPCollateralAndDebtCall__Inputs {
  _call: TransferCDPCollateralAndDebtCall;

  constructor(call: TransferCDPCollateralAndDebtCall) {
    this._call = call;
  }

  get collateralType(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get src(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get dst(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get deltaCollateral(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get deltaDebt(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class TransferCDPCollateralAndDebtCall__Outputs {
  _call: TransferCDPCollateralAndDebtCall;

  constructor(call: TransferCDPCollateralAndDebtCall) {
    this._call = call;
  }
}

export class TransferCollateralCall extends ethereum.Call {
  get inputs(): TransferCollateralCall__Inputs {
    return new TransferCollateralCall__Inputs(this);
  }

  get outputs(): TransferCollateralCall__Outputs {
    return new TransferCollateralCall__Outputs(this);
  }
}

export class TransferCollateralCall__Inputs {
  _call: TransferCollateralCall;

  constructor(call: TransferCollateralCall) {
    this._call = call;
  }

  get collateralType(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get src(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get dst(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get wad(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class TransferCollateralCall__Outputs {
  _call: TransferCollateralCall;

  constructor(call: TransferCollateralCall) {
    this._call = call;
  }
}

export class TransferInternalCoinsCall extends ethereum.Call {
  get inputs(): TransferInternalCoinsCall__Inputs {
    return new TransferInternalCoinsCall__Inputs(this);
  }

  get outputs(): TransferInternalCoinsCall__Outputs {
    return new TransferInternalCoinsCall__Outputs(this);
  }
}

export class TransferInternalCoinsCall__Inputs {
  _call: TransferInternalCoinsCall;

  constructor(call: TransferInternalCoinsCall) {
    this._call = call;
  }

  get src(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get dst(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get rad(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferInternalCoinsCall__Outputs {
  _call: TransferInternalCoinsCall;

  constructor(call: TransferInternalCoinsCall) {
    this._call = call;
  }
}

export class UpdateAccumulatedRateCall extends ethereum.Call {
  get inputs(): UpdateAccumulatedRateCall__Inputs {
    return new UpdateAccumulatedRateCall__Inputs(this);
  }

  get outputs(): UpdateAccumulatedRateCall__Outputs {
    return new UpdateAccumulatedRateCall__Outputs(this);
  }
}

export class UpdateAccumulatedRateCall__Inputs {
  _call: UpdateAccumulatedRateCall;

  constructor(call: UpdateAccumulatedRateCall) {
    this._call = call;
  }

  get collateralType(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get surplusDst(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get rateMultiplier(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class UpdateAccumulatedRateCall__Outputs {
  _call: UpdateAccumulatedRateCall;

  constructor(call: UpdateAccumulatedRateCall) {
    this._call = call;
  }
}

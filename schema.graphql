
" GEB CDP "
type Cdp @entity {
  " Equals to: <cdpHandler>-<CollateralType>"
  id: ID!

  " CDP ID if this CDP was created through the manager (GebCdpManager) "
  cdpId: BigInt

  " Collateral type associated to this cdp "
  collateralType: CollateralType!

  " Assets locked as collateral (cdpCollateral) "
  collateral: BigDecimal!

  " Outstanding debt "
  debt: BigDecimal!

  " cdpHandler address (ownership at the CDPEngine level) "
  cdpHandler: Bytes!

  " Address of CDP owner (top level ownership)"
  owner: Bytes!

  " Optional, address of the proxy if the owner is using a proxy "
  proxy: UserProxy

  " Timestamp of the block in which this CDP was opened [seconds] "
  createdAt: BigInt!

  " Block number in which this CDP was opened "
  createdAtBlock: BigInt!

  " Transaction hash in which this CDP was opened "
  createdAtTransaction: Bytes!

  " Timestamp of the block in which this CDP was last modified [seconds] "
  modifiedAt: BigInt

  " Block number in which this CDP was last modified "
  modifiedAtBlock: BigInt

  " Transaction hash in which this CDP was last modified "
  modifiedAtTransaction: Bytes
}

"""
CDP owner
"""
type User @entity {
  " Account address "
  id: ID!

  " Account address "
  address: Bytes!

  " Up to one per collateral type"
  proxies: [UserProxy!] @derivedFrom(field: "owner")
}

" Contract used to execute transactions and sequences of transactions on behalf of a user "
type UserProxy @entity {
  " Proxy address "
  id: ID!

  " Proxy contract address "
  address: Bytes!

  " Cache contract address "
  cache: Bytes!

  " User reference "
  owner: User!
}

  " Provide information about the current system state and parameters "
  type SystemState @entity {
    " Singleton entity. Equals to 'current' "
    id: ID!

    " Number of CDPs opened through the manager (CdpManager) "
    cdpCount: BigInt!

    " Number of CDPs NOT opened through the manager (CdpManager) "
    unmanagedCdpCount: BigInt!

    " Number of user proxies created "
    proxyCount: BigInt!

    " Total debt issued in bonds across all collaterals "
    globalDebt: BigDecimal!

    " Total unbacked debt issued in bonds across all collaterals "
    globalUnbackedDebt: BigDecimal!

    " Total global Debt Ceiling "
    globalDebtCeiling: BigDecimal!

    " Number of collateral types registered "
    collateralCount: BigInt!

    " Base rate for stability fee per second add for all collaterals "
    globalStabilityFee: BigDecimal!

    " Savings Rate "
    savingsRate: BigDecimal!

    " Number of collateral auctions started "
    collateralAuctionCount: BigInt!

    " Latest redemption rate"
    currentRedemptionRate: RedemptionRate

    " Latest redemption price "
    currentRedemptionPrice: RedemptionPrice

    " Timestamp of the block in which the system was created [seconds] "
    createdAt: BigInt!

    " Block number in which the system was created "
    createdAtBlock: BigInt!

    " Transaction hash in which the system was created "
    createdAtTransaction: Bytes!

    " Timestamp of the block in which the system was last modified [seconds] "
    modifiedAt: BigInt

    " Block number in which the system was last modified "
    modifiedAtBlock: BigInt

    " Transaction hash in which the system was last modified "
    modifiedAtTransaction: Bytes

    # TODO: Flap and flop auctions parameters used to be here. Add the auction abstraction class.
  }
"""
Collateral specific information
"""
type CollateralType @entity {
  " Collateral type name "
  id: ID!

  " Debt ceiling [bond] (line) "
  debtCeiling: BigDecimal!

  " Min debt per CDP [bond] "
  debtFloor: BigDecimal!

  " Current market price [USD] "
  currentPrice: CollateralPrice

  " Asset/bonds exchange rate (rate), interest accrued on this collateral type "
  accumulatedRate: BigDecimal!

  " Total debt backed by this collateral type [bonds]"
  debtAmount: BigDecimal!

  " collateral price with safety margin. Used to limit the amount of debt that can be generated per one unit of collateral "
  safetyCRatio: BigDecimal!

  " Collateral price with safety margin. Used only in LiquidationEngine when a CDP is liquidated "
  liquidationCRatio: BigDecimal!

  " OSM contract address for the colateral (price source)"
  osmAddress: Bytes

  " Stability fee rate per second for the collateral "
  stabilityFee: BigDecimal!

  " Time of the last stability fee update "
  stabilityFeeLastUpdatedAt: BigInt!

  " Number of CDP NOT opened through the manager (CdpManager) "
  unmanagedCdpCount: BigInt!

  " Number of CDPs opened through the manager (CdpManager) "
  cdpCount: BigInt!

  " Penalty applied to every liquidation involving this collateral type "
  liquidationPenalty: BigDecimal!

  " Address of the liquidation auction smart contract "
  collateralAuctionHouseAddress: Bytes

  " Type of collateral auction "
  auctionType: AuctionType

  " Max amount of collateral to sell in one liquidation auction [collateralToSell in LiquidationEngine] "
  maxCollateralToSellInLiquidations: BigDecimal


  " Auction configuration (Fix discount auction only) "
  englishAuctionConfiguration: EnglishAuctionConfiguration

  " Auction configuration (English auction only) "
  FixDiscountAuctionConfiguration: FixDiscountAuctionConfiguration

  " Timestamp of the block in which this collateral type was added [seconds] "
  createdAt: BigInt!

  " Block number in which this collateral type was added "
  createdAtBlock: BigInt!

  " Transaction hash in which this collateral type was added "
  createdAtTransaction: Bytes!

  " Timestamp of the block in which this collateral type was last modified [seconds] "
  modifiedAt: BigInt

  " Block number in which this collateral type was last modified "
  modifiedAtBlock: BigInt

  " Transaction hash in which this collateral type was last modified "
  modifiedAtTransaction: Bytes
}

# --- Prices ---

"""
Collateral market price at a given block
"""
type CollateralPrice @entity {
  " Equals to: <block_number>-<collateral_type>"
  id: ID!

  " Block number "
  block: BigInt!

  " Timestamp in seconds "
  timestamp: BigInt!

  " Collateral type "
  collateral: CollateralType!

  " Price of the collateral discounted by the redemptionPrice and safetyCRatio, price used for bonds mint and redemption "
  safetyPrice: BigDecimal!

  " Price of the collateral discounted by the redemptionPrice an liquidationCRatio, price at which a cdp gets liquidated "
  liquidationPrice: BigDecimal!

  " Collateral price in USD "
  value: BigDecimal!
}

"""
Reflex bond price for redemption
"""
type RedemptionPrice @entity {
  " Equals to: <block_number>"
  id: ID!

  " Block number "
  block: BigInt!

  " Timestamp in seconds "
  timestamp: BigInt!

  " Rate of change of the redemption price, output from the feedback mechanism"
  redemptionRate: BigDecimal!

  " Value of the redemption price, the price of redemption of a reflex bond"
  value: BigDecimal!
}

"""
Rate of change of the redemption price, output from the feedback mechanism.
"""
type RedemptionRate @entity {
  " Equals to: <block_number>"
  id: ID!

  " Block number "
  block: BigInt!

  " Timestamp in seconds "
  timestamp: BigInt!

  " Reflex bond price for redemption "
  redemptionPrice: BigDecimal!

  " Rate of change of the redemption price, output from the feedback mechanism"
  value: BigDecimal!
}

# --- Auctions ---

enum AuctionType {
  ENGLISH
  FIXED_DISCOUNT
}

"""
Static enlgish auction configuration
"""
type EnglishAuctionConfiguration @entity {
  " Collateral type name "
  id: ID!

  " Collateral type"
  collateralType: CollateralType!

  " Minimum bid increase ratio i.g: 1.05 means 5% bid increase minimum "
  bidIncrease: BigDecimal!

  " How long the auction lasts after a new bid is submitted "
  bidDuration: BigInt!

    " Maximum auction length "
  totalAuctionLength: BigInt!

  " Minimum mandatory size of the first bid compared to collateral price coming from the oracle "
  bidToMarketPriceRatio: BigDecimal!

  " OSM contract"
  osm: Bytes

  " Oracle relay contract"
  oracleRelayer: Bytes
}

type FixDiscountAuctionConfiguration @entity {
  " Collateral type name "
  id: ID!
  # TODO:
}

type EnglishCollateralAuction @entity {
  "<Collateral type>-<auction ID>- "
  id: ID!

  " Auction incrmental id per collateral "
  auctionId: BigInt!

  " Type of auction contract, currently english or fix discount "
  auctionType: AuctionType!

  " Collateral type of the auction "
  collateralType: CollateralType!

  " CDP handler address in the CDP engine "
  cdpHandler: Bytes!

  " Total collateral for sale "
  initialCollateralAmount: BigDecimal!

  " Total debt of the CDP to be repaid "
  initialDebtAmount: BigDecimal!

  " Minimum amount to raise in bonds (If less is raised, unbacked debt is created) "
  bondAmountToRaise: BigDecimal!

  " Amount raised so far to repay the debt.  amountRaised <= amountToRaise < initialDebtAmount"
  bondAmountRaised: BigDecimal!

  " Collateral being sold, the remaining is returned to the owner.  collateralAmountSold <= initialCollateralAmount"
  collateralAmountSold: BigDecimal

  " Best bid price at which the collateral is being sold "
  highestBidPrice: BigDecimal!

  " Bidder currently winning the auction "
  highestBidder: Bytes

  " Liquidated CDP "
  cdp: Cdp!

  " Hard deadline for the auction after which no more bids can be placed  "
  auctionDeadline: BigInt!

  " Address that started the auction "
  startedBy: Bytes!

  " If the bough collateral was claimed by the auction winner "
  isClaimed: Boolean!

  " List of individual bid (English auction only) "
  englishAuctionBids: [EnglishAuctionBid!] @derivedFrom(field: "auction")

  " Auction configuration (Fix discount auction only) "
  englishAuctionConfiguration: EnglishAuctionConfiguration!

  " Timestamp of the block in which the liquidation was started "
  createdAt: BigInt!

  " Block number in which the liquidation was started "
  createdAtBlock: BigInt!

  " Transaction hash in which tthe liquidation was started "
  createdAtTransaction: Bytes!

  # TODO: add currentwinner, add current current size and rename the existing InitialdebtAmount and initial collateralAmount,
}

enum EnglishBidType {
  DecreaseSoldAmount
  IncreaseBidSize
}

type EnglishAuctionBid @entity {
  " <auction id>-<block> "
  id: ID!

  " Type, either increase buy or decrease sell "
  type: EnglishBidType!

  " Auction to which the bid belongs "
  auction: EnglishCollateralAuction!

  " How many reflex bonds are offerd for the auctioned batch "
  bondAmountRaised: BigDecimal!

  " Size of the auction batch the auctioned batch in collateral "
  collateralAmountSold: BigDecimal!

  " Collateral price "
  price: BigDecimal!

  " When the latest bid expires and the auction can be settled "
  bidExpiry: BigInt!

  " Bidder address"
  bidder: Bytes

  " Timestamp of the block in which the liquidation was started "
  createdAt: BigInt!

  " Block number in which the liquidation was started "
  createdAtBlock: BigInt!

  " Transaction hash in which tthe liquidation was started "
  createdAtTransaction: Bytes!
}

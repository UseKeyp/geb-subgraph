specVersion: 0.0.2
description: The Graph protocol subgraph for GEB
repository: https://github.com/reflexer-labs/geb-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - name: GebDeploy
    kind: ethereum/contract
    network: {{network}}
    source:
      address: '{{GebDeploy_address}}'
      abi: GebDeploy
      startBlock: {{startblock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/modules/init/geb-deployer.ts
      entities:
        - CDPEngine
      abis:
        - name: GebDeploy
          file: ./abis/GebDeploy.json
      # eventHandlers:
      # - event: NewGravatar(uint256,address,string,string)
      #   handler: handleNewGravatar
      callHandlers:
        - function: deployCDPEngine()
          handler: handleDeployCDPEngine
  - name: CDPEngine
    kind: ethereum/contract
    network: {{network}}
    source:
      address: '{{CDPEngine_address}}'
      abi: CDPEngine
      startBlock: {{startblock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/modules/core/cdp-engine.ts
      entities:
        - CollateralType
        - SystemState
        - Cdp
      abis:
        - name: CDPEngine
          file: ./abis/CDPEngine.json
      eventHandlers:
        - event: InitializeCollateralType(bytes32)
          handler: handleInitializeCollateralType
        - event: ModifyParameters(bytes32,bytes32,uint256)
          handler: handleModifyParametersCollateralTypeUint
        - event: ModifyParameters(bytes32,uint256)
          handler: handleModifyParametersUint
        - event: ModifyCollateralBalance(bytes32,address,int256)
          handler: handleModifyCollateralBalance
        - event: TransferCollateral(bytes32,address,address,uint256)
          handler: handleTransferCollateral
        - event: TransferInternalCoins(address,address,uint256)
          handler: handleTransferInternalCoins
        - event: ModifyCDPCollateralization(bytes32,address,address,address,int256,int256,uint256,uint256,uint256)
          handler: handleModifyCDPCollateralization
        - event: TransferCDPCollateralAndDebt(bytes32,address,address,int256,int256,uint256,uint256,uint256,uint256)
          handler: handleTransferCDPCollateralAndDebt
        - event: ConfiscateCDPCollateralAndDebt(bytes32,address,address,address,int256,int256,uint256)
          handler: handleConfiscateCDPCollateralAndDebt
        - event: SettleDebt(uint256,uint256,uint256,uint256,uint256)
          handler: handleSettleDebt
        - event: CreateUnbackedDebt(address,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleCreateUnbackedDebt
        - event: UpdateAccumulatedRate(bytes32,address,int256,uint256,uint256)
          handler: handleUpdateAccumulatedRate
  - name: CDPManager
    kind: ethereum/contract
    network: {{network}}
    source:
      address: '{{CDPEngine_address}}'
      abi: CDPManager
      startBlock: {{startblock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/modules/proxy/cdp-manager.ts
      entities:
        - CollateralType
        - SystemState
        - Cdp
      abis:
        - name: CDPManager
          file: ./abis/CDPManager.json
      eventHandlers:
        - event: NewCdp(indexed address,indexed address,indexed uint256)
          handler: handleNewCdp
        - event: TransferCDPOwnership(address,uint256,address)
          handler: handleTransferCDPOwnership
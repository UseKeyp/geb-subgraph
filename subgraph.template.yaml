specVersion: 0.0.2
description: The Graph protocol subgraph for GEB
repository: https://github.com/reflexer-labs/geb-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - name: CDPEngine
    kind: ethereum/contract
    network: {{NETWORK}}
    source:
      address: '{{GEB_CDP_ENGINE}}'
      abi: CDPEngine
      startBlock: {{STARTING_BLOCK_NUMBER}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/modules/core/cdp-engine.ts
      entities:
        - CollateralType
        - SystemState
        - Cdp
      abis:
        - name: CDPEngine
          file: ./abis/CDPEngine.json
      eventHandlers:
        - event: InitializeCollateralType(bytes32)
          handler: handleInitializeCollateralType
        - event: ModifyParameters(bytes32,bytes32,uint256)
          handler: handleModifyParametersCollateralTypeUint
        - event: ModifyParameters(bytes32,uint256)
          handler: handleModifyParametersUint
        - event: ModifyCollateralBalance(bytes32,address,int256)
          handler: handleModifyCollateralBalance
        - event: TransferCollateral(bytes32,address,address,uint256)
          handler: handleTransferCollateral
        - event: TransferInternalCoins(address,address,uint256)
          handler: handleTransferInternalCoins
        - event: ModifyCDPCollateralization(bytes32,address,address,address,int256,int256,uint256,uint256,uint256)
          handler: handleModifyCDPCollateralization
        - event: TransferCDPCollateralAndDebt(bytes32,address,address,int256,int256,uint256,uint256,uint256,uint256)
          handler: handleTransferCDPCollateralAndDebt
        - event: ConfiscateCDPCollateralAndDebt(bytes32,address,address,address,int256,int256,uint256)
          handler: handleConfiscateCDPCollateralAndDebt
        - event: SettleDebt(uint256,uint256,uint256,uint256,uint256)
          handler: handleSettleDebt
        - event: CreateUnbackedDebt(address,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleCreateUnbackedDebt
        - event: UpdateAccumulatedRate(bytes32,address,int256,uint256,uint256)
          handler: handleUpdateAccumulatedRate
  
  - name: GebCDPManager
    kind: ethereum/contract
    network: {{NETWORK}}
    source:
      address: '{{CDP_MANAGER}}'
      abi: GebCDPManager
      startBlock: {{STARTING_BLOCK_NUMBER}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/modules/proxy/cdp-manager.ts
      entities:
        - CollateralType
        - SystemState
        - Cdp
      abis:
        - name: GebCDPManager
          file: ./abis/GebCDPManager.json
      eventHandlers:
        - event: OpenCdp(indexed address,indexed address,indexed uint256)
          handler: handleOpenCdp
        - event: TransferCDPOwnership(address,uint256,address)
          handler: handleTransferCDPOwnership
        - event: AllowCDP(address,uint256,address,uint256)
          handler: handleAllowCDP
        - event: AllowHandler(address,address,uint256)
          handler: handleAllowHandler
        # Other events in CDPManager are handled by CDPEngine

  - name: OracleRelayer
    kind: ethereum/contract
    network: {{NETWORK}}
    source:
      address: '{{GEB_ORACLE_RELAYER}}'
      abi: OracleRelayer
      startBlock: {{STARTING_BLOCK_NUMBER}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/modules/core/oracle-relayer.ts
      entities:
        - CollateralType
        - SystemState
        - Cdp
      abis:
        - name: OracleRelayer
          file: ./abis/OracleRelayer.json
      eventHandlers:
        - event: UpdateCollateralPrice(bytes32,uint256,uint256,uint256)
          handler: handleUpdateCollateralPrice
        - event: UpdateRedemptionPrice(uint256)
          handler: handleUpdateRedemptionPrice
        - event: ModifyParameters(bytes32,bytes32,address)
          handler: handleModifyParametersCollateralTypeAddress
        - event: ModifyParameters(bytes32,bytes32,uint256)
          handler: handleModifyParametersCollateralTypeUint
        - event: ModifyParameters(bytes32,uint256)
          handler: handleModifyParametersUint
  
  - name: TaxCollector
    kind: ethereum/contract
    network: {{NETWORK}}
    source:
      address: '{{GEB_TAX_COLLECTOR}}'
      abi: TaxCollector
      startBlock: {{STARTING_BLOCK_NUMBER}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/modules/core/tax-collector.ts
      entities:
        - CollateralType
        - SystemState
      abis:
        - name: TaxCollector
          file: ./abis/TaxCollector.json
      eventHandlers:
        - event: ModifyParameters(bytes32,bytes32,uint256) # Type 0
          handler: handleModifyParametersCollateralTypeUint
        - event: ModifyParameters(bytes32,uint256) # Type 1
          handler: handleModifyParametersUint
        
        # Remaining events
        # - event: AddAuthorization(address)
        #   handle: handleAddAuthorization
        # - event: AddSecondaryReceiver(bytes32,uint256,uint256,uint256,uint256)
        #   handle: handleAddSecondaryReceiver
        # - event: CollectTax(bytes32,uint256,int256)
        #   handle: handleCollectTax
        # - event: DistributeTax(bytes32,address,int256)
        #   handle: handleDistributeTax
        # - event: InitializeCollateralType(bytes32)
        #   handle: handleInitializeCollateralType
        # - event: ModifyParameters(bytes32,address)
        #   handle: handleModifyParameters
        # - event: ModifyParameters(bytes32,uint256,uint256)
        #   handle: handleModifyParameters
        # - event: ModifyParameters(bytes32,uint256,uint256,address)
        #   handle: handleModifyParameters
        # - event: ModifySecondaryReceiver(bytes32,uint256,uint256,uint256,uint256)
        #   handle: handleModifySecondaryReceiver
        # - event: RemoveAuthorization(address)
        #   handle: handleRemoveAuthorization
  
  - name: LiquidationEngine
    kind: ethereum/contract
    network: {{NETWORK}}
    source:
      address: '{{GEB_LIQUIDATION_ENGINE}}'
      abi: LiquidationEngine
      startBlock: {{STARTING_BLOCK_NUMBER}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/modules/core/liquidation-engine.ts
      entities:
        - CollateralType
        - CollateralAuction
        - EnglishAuctionConfiguration
        - FixDiscountAuctionConfiguration
      abis:
        - name: LiquidationEngine
          file: ./abis/LiquidationEngine.json
        - name: EnglishCollateralAuctionHouse
          file: ./abis/EnglishCollateralAuctionHouse.json
      eventHandlers:
        - event: Liquidate(indexed bytes32,indexed address,uint256,uint256,uint256,address,uint256)
          handler: handleLiquidate
        - event: ModifyParameters(bytes32,bytes32,address)
          handler: handleModifyParametersCollateralTypeAddress
        - event: ModifyParameters(bytes32,bytes32,uint256)
          handler: handleModifyParametersCollateralTypeUint
        
        # Remaining events:
        # - event: AddAuthorization(address)
        #   handler: handleAddAuthorization
        # - event: ConnectCDPSaviour(address)
        #   handler: handleConnectCDPSaviour
        # - event: DisableContract()
        #   handler: handleDisableContract
        # - event: DisconnectCDPSaviour(address)
        #   handler: handleDisconnectCDPSaviour
        # - event: FailedCDPSave(bytes)
        #   handler: handleFailedCDPSave
        # - event: ProtectCDP(bytes32,address,address)
        #   handler: handleProtectCDP
        # - event: RemoveAuthorization(address)
        #   handler: handleRemoveAuthorization
        # - event: SaveCDP(indexed bytes32,indexed address,uint256)
        #   handler: handleSaveCDP
  
  - name: AccountingEngine
    kind: ethereum/contract
    network: {{NETWORK}}
    source:
      address: '{{GEB_ACCOUNTING_ENGINE}}'
      abi: AccountingEngine
      startBlock: {{STARTING_BLOCK_NUMBER}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/modules/core/accounting-engine.ts
      entities:
        - CollateralType
        - SystemState
      abis:
        - name: AccountingEngine
          file: ./abis/AccountingEngine.json
      eventHandlers:
        - event: ModifyParameters(bytes32,address)
          handler: handleModifyParametersAddress
        - event: ModifyParameters(bytes32,uint256)
          handler: handleModifyParametersUint
        - event: AuctionDebt(uint256,uint256,uint256)
          handler: handleAuctionDebt
        - event: AuctionSurplus(uint256,uint256,uint256)
          handler: handleAuctionSurplus
        # Remaining events:
        # - event: AddAuthorization(address)
        #   handler: handleAddAuthorization
        # - event: CancelAuctionedDebtWithSurplus(uint256,uint256,uint256,uint256)
        #   handler: handleCancelAuctionedDebtWithSurplus
        # - event: DisableContract(uint256,uint256,uint256,uint256)
        #   handler: handleDisableContract
        # - event: PopDebtFromQueue(uint256,uint256,uint256)
        #   handler: handlePopDebtFromQueue
        # - event: PushDebtToQueue(uint256,uint256,uint256)
        #   handler: handlePushDebtToQueue
        # - event: RemoveAuthorization(address)
        #   handler: handleRemoveAuthorization
        # - event: SettleDebt(uint256,uint256,uint256)
        #   handler: handleSettleDebt
        # - event: TransferPostSettlementSurplus(address,uint256,uint256)
        #   handler: handleTransferPostSettlementSurplus

  - name: ProxyFactory
    kind: ethereum/contract
    network: {{NETWORK}}
    source:
      abi: DSProxyFactory
      address: '{{PROXY_FACTORY}}'
      startBlock: {{STARTING_BLOCK_NUMBER}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/modules/proxy/proxy-factory.ts
      entities:
        - UserProxy
      abis:
        - name: DSProxyFactory
          file: ./abis/DSProxyFactory.json
      eventHandlers:
        - event: Created(indexed address,indexed address,address,address)
          handler: handleCreated
templates:
  - name: EnglishCollateralAuctionHouse
    kind: ethereum/contract
    network: {{NETWORK}}
    source:
      abi: EnglishCollateralAuctionHouse
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/modules/auctions/english-collateral-auction-house.ts
      entities:
        - CollateralType
        - CollateralAuction
        - EnglishAuctionConfiguration
        - EnglishAuctionBid
      abis:
        - name: EnglishCollateralAuctionHouse
          file: ./abis/EnglishCollateralAuctionHouse.json
      eventHandlers:
        - event: DecreaseSoldAmount(uint256,address,uint256,uint256,uint256)
          handler: handleDecreaseSoldAmount
        - event: IncreaseBidSize(uint256,address,uint256,uint256,uint256)
          handler: handleIncreaseBidSize
        - event: ModifyParameters(bytes32,address)
          handler: handleModifyParametersAddress
        - event: ModifyParameters(bytes32,uint256)
          handler: handleModifyParametersUint
        - event: SettleAuction(uint256)
          handler: handleSettleAuction
        
        # Remaining events:
        # - event: AddAuthorization(address)
        #   handler: handleAddAuthorization
        # - event: RemoveAuthorization(address)
        #   handler: handleRemoveAuthorization
        # - event: RestartAuction(uint256,uint256)
        #   handler: handleRestartAuction
        # - event: StartAuction(uint256,uint256,uint256,uint256,uint256,indexed address,indexed address,uint256)
        #   handler: handleStartAuction
        # - event: TerminateAuctionPrematurely(uint256,address,uint256,uint256)
        #   handler: handleTerminateAuctionPrematurely
  
  - name: FixDiscountCollateralAuctionHouse
    kind: ethereum/contract
    network: {{NETWORK}}
    source:
      abi: FixedDiscountCollateralAuctionHouse
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/modules/auctions/discount-collateral-auction-house.ts
      entities:
        - CollateralType
        - FixDiscountCollateralAuction
        - FixDiscountAuctionConfiguration
        - FixDiscountAuctionBatch
      abis:
        - name: FixedDiscountCollateralAuctionHouse
          file: ./abis/FixedDiscountCollateralAuctionHouse.json
      eventHandlers:
        - event: ModifyParameters(bytes32,address)
          handler: handleModifyParametersAddress
        - event: ModifyParameters(bytes32,uint256)
          handler: handleModifyParametersUint
        - event: BuyCollateral(uint256,uint256,uint256)
          handler: handleBuyCollateral
        
        # Remaining events:
        # - event: AddAuthorization(address)
        #   handler: handleAddAuthorization
        # - event: RemoveAuthorization(address)
        #   handler: handleRemoveAuthorization
        # - event: SettleAuction(uint256,uint256)
        #   handler: handleSettleAuction
        # - event: StartAuction(uint256,uint256,uint256,uint256,uint256,indexed address,indexed address,uint256)
        #   handler: handleStartAuction
        # - event: TerminateAuctionPrematurely(uint256,address,uint256)
        #   handler: handleTerminateAuctionPrematurely

  - name: PreSettlementSurplusAuctionHouse
    kind: ethereum/contract
    network: {{NETWORK}}
    source:
      abi: PreSettlementSurplusAuctionHouse
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/modules/auctions/settlement-surplus-auction-houses.ts
      entities:
        - EnglishAuction
        - EnglishAuctionBid
      abis:
        - name: PreSettlementSurplusAuctionHouse
          file: ./abis/PreSettlementSurplusAuctionHouse.json
      eventHandlers:
        - event: ModifyParameters(bytes32,uint256)
          handler: handleModifyParametersPre
        - event: IncreaseBidSize(uint256,address,uint256,uint256,uint256)
          handler: handleIncreaseBidSizePre
        - event: RestartAuction(uint256,uint256)
          handler: handleRestartAuctionPre
        - event: SettleAuction(uint256)
          handler: handleSettleAuctionPre

        # Remaining events:
        # - event: AddAuthorization(address)
        #   handler: handleAddAuthorization
        # - event: DisableContract()
        #   handler: handleDisableContract
        # - event: RemoveAuthorization(address)
        #   handler: handleRemoveAuthorization
        # - event: StartAuction(uint256,uint256,uint256,uint256,uint256)
        #   handler: handleStartAuction
        # - event: TerminateAuctionPrematurely(uint256,address,address,uint256)
        #   handler: handleTerminateAuctionPrematurely

  - name: PostSettlementSurplusAuctionHouse
    kind: ethereum/contract
    network: {{NETWORK}}
    source:
      abi: PostSettlementSurplusAuctionHouse
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/modules/auctions/settlement-surplus-auction-houses.ts
      entities:
        - EnglishAuction
        - EnglishAuctionBid
      abis:
        - name: PostSettlementSurplusAuctionHouse
          file: ./abis/PostSettlementSurplusAuctionHouse.json
      eventHandlers:
        - event: ModifyParameters(bytes32,uint256)
          handler: handleModifyParametersPost
        - event: IncreaseBidSize(uint256,address,uint256,uint256,uint256)
          handler: handleIncreaseBidSizePost
        - event: RestartAuction(uint256,uint256)
          handler: handleRestartAuctionPost
        - event: SettleAuction(uint256)
          handler: handleSettleAuctionPost

        # Remaining events:
        # - event: AddAuthorization(address)
        #   handler: handleAddAuthorization
        # - event: RemoveAuthorization(address)
        #   handler: handleRemoveAuthorization
        # - event: StartAuction(uint256,uint256,uint256,uint256,uint256)
        #   handler: handleStartAuction

  - name: DebtAuctionHouse
    kind: ethereum/contract
    network: {{NETWORK}}
    source:
      abi: DebtAuctionHouse
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/modules/auctions/debt-auction-house.ts
      entities:
        - CollateralType
        - FixDiscountCollateralAuction
        - FixDiscountAuctionConfiguration
        - FixDiscountAuctionBatch
      abis:
        - name: DebtAuctionHouse
          file: ./abis/DebtAuctionHouse.json
      eventHandlers:
        - event: ModifyParameters(bytes32,uint256)
          handler: handleModifyParametersUint
        
        # Remaining events:
        # - event: ModifyParameters(bytes32,address)
        #   handler: handleModifyParametersAddress
        # - event: AddAuthorization(address)
        #   handler: handleAddAuthorization
        # - event: DecreaseSoldAmount(uint256,address,uint256,uint256,uint256)
        #   handler: handleDecreaseSoldAmount
        # - event: DisableContract(address)
        #   handler: handleDisableContract
        # - event: RemoveAuthorization(address)
        #   handler: handleRemoveAuthorization
        # - event: RestartAuction(uint256,uint256)
        #   handler: handleRestartAuction
        # - event: SettleAuction(uint256,uint256)
        #   handler: handleSettleAuction
        # - event: StartAuction(uint256,uint256,uint256,uint256,indexed address,uint256,uint256)
        #   handler: handleStartAuction
        # - event: TerminateAuctionPrematurely(uint256,address,address,uint256,uint256)  
        #   handler: handleTerminateAuctionPrematurely


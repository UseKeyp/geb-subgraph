" GEB CDP "
type Cdp @entity {
  " Equals to: <cdpHandler>-<CollateralType>"
  id: ID!

  " CDP ID if this CDP was created through the manager (GebCdpManager) "
  cdpId: BigInt

  " Collateral type associated to this cdp "
  collateralType: CollateralType!

  " Assets locked as collateral (cdpCollateral) "
  collateral: BigDecimal!

  " Outstanding debt "
  debt: BigDecimal!

  " cdpHandler address (ownership at the CDPEngine level) "
  handler: Bytes!

  " Address of CDP owner (top level ownership)"
  owner: Bytes!

  " Timestamp of the block in which this CDP was opened [seconds] "
  openedAt: BigInt!

  " Block number in which this CDP was opened "
  openedAtBlock: BigInt!

  " Transaction hash in which this CDP was opened "
  openedAtTransaction: Bytes!

  " Timestamp of the block in which this CDP was last modified [seconds] "
  modifiedAt: BigInt

  " Block number in which this CDP was last modified "
  modifiedAtBlock: BigInt

  " Transaction hash in which this CDP was last modified "
  modifiedAtTransaction: Bytes
}

"""
Collateral auctions are used to sell collateral from CDPs that have become undercollateralized
in order to preserve the collateralization of the system

TODO: Auction specific parameters used to be here, move them to appropriate class
"""
type CollateralType @entity {
  " Collateral type name "
  id: ID!

  " Debt ceiling [RAI] (line) "
  debtCeiling: BigDecimal!

  " Min debt per CDP [RAI] "
  debtFloor: BigDecimal!

  " Current market price [USD] "
  currentPrice: CollateralPrice

  " Asset/RAI exchange rate (rate) "
  rate: BigDecimal!

  " Total debt backed by this collateral type [RAI]"
  debtAmount: BigDecimal!

  " Liquidation penalty "
  liquidationPenalty: BigDecimal!

  " collateral price with safety margin. Used to limit the amount of debt that can be generated per one unit of collateral "
  safetyCRatio: BigDecimal!

  " Collateral price with safety margin. Used only in LiquidationEngine when a CDP is liquidated "
  liquidationCRatio: BigDecimal!

  " Stability fee rate per second "
  stabilityFee: BigDecimal!

  " Number of CDP NOT opened through the manager (CdpManager) "
  unmanagedCdpCount: BigInt!

  " Number of CDPs opened through the manager (CdpManager) "
  cdpCount: BigInt!

  " Timestamp of the block in which this collateral type was added [seconds] "
  addedAt: BigInt!

  " Block number in which this collateral type was added "
  addedAtBlock: BigInt!

  " Transaction hash in which this collateral type was added "
  addedAtTransaction: Bytes!

  " Timestamp of the block in which this collateral type was last modified [seconds] "
  modifiedAt: BigInt

  " Block number in which this collateral type was last modified "
  modifiedAtBlock: BigInt

  " Transaction hash in which this collateral type was last modified "
  modifiedAtTransaction: Bytes
}

"""
Collateral market price at a given block
TODO: Add the new liquidationPrice
"""
type CollateralPrice @entity {
  " Equals to: <block_number>-<collateral_type>"
  id: ID!

  " Block number "
  block: BigInt!

  " Collateral type "
  collateral: CollateralType!

  " Timestamp in seconds "
  timestamp: BigInt!

  " Safety Price "
  safetyPrice: BigDecimal!

  " Liquidation price "
  liquidationPrice: BigDecimal!
}

"""
CDP owner
"""
type User @entity {
  " Account address "
  id: ID!

  " Account address "
  address: Bytes!

  " Up to one per collateral type"
  proxies: [UserProxy!] @derivedFrom(field: "owner")
}

" Contract used to execute transactions and sequences of transactions on behalf of a user "
type UserProxy @entity {
  " Proxy address "
  id: ID!

  " Proxy contract address "
  address: Bytes!

  " Cache contract address "
  cache: Bytes!

  " User reference "
  owner: User!
}

" Provide information about the current system state and parameters "
type SystemState @entity {
  " Singleton entity. Equals to 'current' "
  id: ID!

  " The latest block in which a system parameters was modified "
  block: BigInt!

  " The latest timestamp in which a system parameters was modified "
  timestamp: BigInt!

  " The latest transaction hash in which a system parameters was modified "
  transaction: Bytes!

  #
  # General protocol stats
  #

  " Total debt issued [RAI]"
  totalDebt: BigDecimal!

  #
  # About number of entities registered system-wide
  #

  " Number of collateral types registered "
  collateralCount: BigInt!

  " Number of collateral auctions started "
  collateralAuctionCount: BigInt!

  " Number of user proxies created "
  proxyCount: BigInt!

  " Number of CDPs NOT opened through the manager (CdpManager) "
  unmanagedCdpCount: BigInt!

  " Number of CDPs opened through the manager (CdpManager) "
  cdpCount: BigInt!

  #
  # General system parameters
  #

  " Base rate for stability fee per second "
  baseStabilityFee: BigDecimal!

  " Savings Rate "
  savingsRate: BigDecimal!

  " Total Debt Ceiling "
  totalDebtCeiling: BigDecimal!

  # TODO: Flap and flop auctions parameters used to be here. Add the auction abstraction class.
}
